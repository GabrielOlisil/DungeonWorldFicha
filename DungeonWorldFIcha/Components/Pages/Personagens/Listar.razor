@page "/Personagens/"
@using DungeonWorldFIcha.Models
@using DungeonWorldFIcha.Services
@using DungeonWorldFIcha.Services.Interfaces
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject IPersonagemService PersonagemService
@rendermode InteractiveServer



<div @onclick="HandleCreate" class="btn btn-success mb-3" >Adicionar</div>


@if (_personagens == null)
{
    <p>Carregando personagens...</p>
}
else if (!_personagens.Any())
{
    <p>Nenhum personagem encontrado.</p>
}
else
{

    <div class="row row-cols-1 row-cols-md-3 g-4 mb-3">
        @foreach (var personagem in _personagens)
        {
            <div class="col">
                <div class="card shadow-sm h-100 d-flex flex-column">
                    <div class="overflow-hidden" style="height: 200px;">
                        <img src="@personagem.ImageUrl" class="card-img-top w-100 h-100 object-fit-cover" alt="img">
                    </div>
                    <div class="card-body d-flex flex-column justify-content-between">
                        <div>
                            <h5 class="card-title">@personagem.Nome</h5>
                            <p class="card-text">
                                <strong>NÃ­vel:</strong> @personagem.Nivel <br/>
                                <strong>Pv:</strong> @personagem.Pv <br/>
                                <strong>Armadura:</strong> @personagem.Armadura
                            </p>
                        </div>
                        <div>
                            <button class="btn btn-primary w-100 mb-2" @onclick="() => HandleClick(personagem.PersonagemId)">Visualizar</button>
                           @* <button class="btn btn-danger w-100" @onclick="() => HandleDelete(personagem.PersonagemId)">Remover</button> *@
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
@code {
    
    private List<Personagem>? _personagens;
    
    protected override async Task OnInitializedAsync()
    {
        _personagens = await PersonagemService.GetPersonagens();
    }

    private void HandleClick(int Id)
    {
        Navigation.NavigateTo($"/Personagens/{Id}");
    }

    private void HandleCreate()
    {
        Navigation.NavigateTo($"/personagens/novo");
    }

    private async Task HandleDelete(int id)
    {
        if (await PersonagemService.RemovePersonageById(id))
        {
            Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        }
    }
}